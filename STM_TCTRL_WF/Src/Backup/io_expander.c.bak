#include "io_expander.h"

uint8_t PCF8574A_reg;


uint8_t PCF8574_ReadReg(void)
{
	HAL_StatusTypeDef res;
	res = HAL_I2C_Master_Receive(PCF8574A_I2C_PORT, PCF8574A_ADDR, &PCF8574A_reg, 1, HAL_MAX_DELAY);
		if(res != HAL_OK){
			if(PCF8574A_DBG_PRINT_F){
				dbg_print("PCF8574A: READ ERROR!\r\n");
				sprintf(dbg_str, "I2C STATUS CODE: %d\r\n", res);
				dbg_print(dbg_str);
				sprintf(dbg_str, "I2C ERROR CODE: %d\r\n", HAL_I2C_GetError( PCF8574A_I2C_PORT));
				dbg_print(dbg_str);				
			}
			return 1;
		}
		return 0;
}


uint8_t PCF8574_Init(uint8_t chanels)
{
	HAL_StatusTypeDef res;
	res = HAL_I2C_Master_Transmit(PCF8574A_I2C_PORT, PCF8574A_ADDR, &chanels, 1, HAL_MAX_DELAY);
		if(res != HAL_OK){
			 if(PCF8574A_DBG_PRINT_F){	 
				 dbg_print("PCF8574A: READ ERROR!\r\n");
				sprintf(dbg_str, "I2C STATUS CODE: %d\r\n", res);
				dbg_print(dbg_str);
				sprintf(dbg_str, "I2C ERROR CODE: %d\r\n", HAL_I2C_GetError( PCF8574A_I2C_PORT));
				dbg_print(dbg_str);
				 
			 }
			 return 1;
	
		}
		return 0;
}

uint8_t PCF8574_IsDeviceReady(void){
	 HAL_StatusTypeDef res = HAL_I2C_IsDeviceReady( PCF8574A_I2C_PORT, PCF8574A_ADDR, 3, HAL_MAX_DELAY);		
	 if (res != HAL_OK) {			
		 if(PCF8574A_DBG_PRINT_F){
			 dbg_print("PCF8574A: READ ERROR!\r\n");
				sprintf(dbg_str, "I2C STATUS CODE: %d\r\n", res);
				dbg_print(dbg_str);
				sprintf(dbg_str, "I2C ERROR CODE: %d\r\n", HAL_I2C_GetError( PCF8574A_I2C_PORT));
				dbg_print(dbg_str);
		 }
		 return 1;	
	 }	
	 return 0;	
}
